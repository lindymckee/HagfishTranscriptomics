#Script written and provided by Dr. David Plachetzki and Plachetzki Lab, UNH; script edited by Lindy McKee and Stephen Mrenna
#set working dir in Session>Set working dir>To source file location

#setwd("C:\Users\Lindy\Desktop\genomicsproject")   #<-----set me!

source("https://bioconductor.org/biocLite.R"); biocLite("tximport"); install.packages("readr"); biocLite("edgeR")    #<-----uncomment & run if any not installed yet
#Bioconductor our out of date- run code below to install newer version 
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "3.14")
BiocManager::install(c("tximport", "edgeR", "biocLite"))
BiocManager::install("edgeR")

library(tximport); library(readr); library(edgeR); library(limma)

#in your cwd make a text file named libraries_to_stages.txt - this should have 2 columns - the first is the name
#of your sample and the second (seperated by a space) is the group number it belongs to (so the stage)

#Make a dir in your cwd named mapping - place all of your output dirs for each sample that was outputted by salmon in this dir
dir <- getwd()
list.files()

#library info file
devstages<-read.table("libraries_to_tissues.txt",header=F,row.names=1)
barb<-rownames(devstages)[which(devstages$V2==1)]; barbfiles <- file.path(dir, "mapping",barb, "quant.sf"); names(barbfiles)<-barb
skin<-rownames(devstages)[which(devstages$V2==2)]; skinfiles <- file.path(dir, "mapping",skin, "quant.sf"); names(skinfiles)<-skin
slime<-rownames(devstages)[which(devstages$V2==3)]; slimefiles <- file.path(dir, "mapping",slime, "quant.sf"); names(slimefiles)<-slime

##pick colors for each library type
barbcol <- "darkgreen"
skincol <- "darkred"
slimecol <- "blue"

################################
### Multidimensional scaling ###
################################

runEdgeRmds<-function(salmonquantfiles, groups, colors){
  ##  read in files with tximport
  txi.salmon<- tximport(salmonquantfiles, type = "salmon", txOut=T, dropInfReps=TRUE)
  cts <- txi.salmon$counts
  print(colSums(cts))
  
  keep <- rowSums(cpm(cts)>10.0) >= length(groups)
  cts<- cts[keep,]
  dim(cts)
  print(colSums(cts))
  
  group <- groups
  y <- DGEList(counts=cts ,group=group)
  y <- calcNormFactors(y)
  y <-estimateCommonDisp(y)
  y <- estimateTagwiseDisp(y, prior.n=16) # TagwiseDisp n-value should be close to: 50/(#samples - #groups) = 50/(36-6) = 50/30 =1.66
  
  
  plotMDS.DGEList(y , main = "MDS Plot for Count Data", labels = colnames(y),col=colors, xpd = TRUE)
  par(mar = c(5.1, 4.1, 4.1, 4))
  legend(1.25,0.2 ,legend=paste("Stage ",levels(as.factor(groups))),text.col=colors[seq(1,length(colors),3)], xpd = TRUE, cex = 0.75) #change the last number to how many groups you have
  
}
#pdf(file="MDS.pdf",width=8, height=11)
cols<-c(barbcol, skincol, slimecol)
runEdgeRmds(c(barbfiles, skinfiles, slimefiles), c(1,1,1,1,2,2,2,3,3,3),rep(cols,each=3)) #change the last number to how many groups you have
#par(mfrow=c(1,1))

##############################################
### pairwise comparisons between libraries ###
##############################################

runEdgeRpwise<-function(salmonquantfiles, groups,colors){
  ##  read in files with tximport
  txi.salmon<- tximport(salmonquantfiles, type = "salmon", txOut=T, dropInfReps=TRUE)
  cts <- txi.salmon$counts
  print(colSums(cts))
  
  keep <- rowSums(cpm(cts)>10.0) >= length(groups)
  cts<- cts[keep,]
  dim(cts)
  print(colSums(cts))
  
  y <- DGEList(counts=cts ,group=groups)
  print(str(y))
  y <- calcNormFactors(y)
  print(str(y))
  
  y<-estimateCommonDisp(y)
  # TagwiseDisp n-value should be close to: 50/(#samples - #groups) = 50/(36-6) = 50/30 =1.666667
  y <- estimateTagwiseDisp(y, prior.n=16)
  
  group<-levels(as.factor(groups))		
  et<-exactTest(y, pair=c(group[1],group[2]))
  tab<-summary(de <- decideTestsDGE(et, p=0.05, adjust="BH"))
  n<-tab[1]+tab[3]
  detags <- rownames(y)[as.logical(de)]
  
  
  plotSmear(et, de.tags=detags, main="DGE Exact Test")
  abline(h = c(-2, 2), col = "blue")
  abline(h = c(-4, 4), col = "blue")
  
  plotMDS.DGEList(y , main = "MDS Plot for Count Data", labels = colnames(y), col=colors)
  textcol<-colors[seq(1,length(colors),5)]
  legend("bottomright",legend=paste("Stage ",group),text.col= textcol,bty="n")
  
  plotBCV(y, main="BCV plot")
  
  meanVarPlot <- plotMeanVar(estimateCommonDisp(y) , show.raw.vars=TRUE,
                             show.tagwise.vars=TRUE,
                             show.binned.common.disp.vars=FALSE,
                             show.ave.raw.vars=FALSE , NBline=TRUE,
                             nbins=100,
                             pch=16,
                             xlab="Mean Expresion (Log10)",
                             ylab="Variance (Log10)",
                             main="Mean-Variance Plot")
  
  #positive FC: higher in group2 than 1 
  return(topTags(et, n=n))
}



#evaluate stage5 vs stage6
par(mfrow=c(2,2),oma=c(1,1,2,0))
barbvskin<-runEdgeRpwise(c(barbfiles,skinfiles), c(1,1,1,1,2,2,2),rep(c(barbcol, skincol),each=3))
title("Barbel vs Skin",outer=T)
#write.table(s5vs6, "C:\\Users\\Marissa Cartee\\Desktop\\Plachetzki Lab\\Hagfish Transcriptomes\\Individuals\\EG_ind4\\s5vs6_edgeR_output.txt", sep="\t")
par(mfrow=c(2,2),oma=c(1,1,2,0))
barbvslime<-runEdgeRpwise(c(barbfiles,slimefiles), c(1,1,1,1,3,3,3),rep(c(barbcol, slimecol),each=3))
title("Barbel vs Slime",outer=T)

par(mfrow=c(2,2),oma=c(1,1,2,0))
skinvslime<-runEdgeRpwise(c(skinfiles,slimefiles), c(2,2,2,3,3,3),rep(c(skincol, slimecol),each=3))
title("Skin vs Slime",outer=T)

#these objects list the de genes. Note the logFC (log fold change) column. 
#You can then find these seqs in the assemblies
options(max.print = 1000000000)
#visualize the number of degs 
par(mfrow=c(1,1))
barplot(c(nrow(barbvskin), nrow(barbvslime), nrow(skinvslime)),names.arg=c("barbvskin","barbvslime","skinvslime"), main="Number of differentially expressed transcripts")
